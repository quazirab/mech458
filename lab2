/*########################################################################
# MILESTONE : 1
# PROGRAM : 1
# PROJECT : MyFirstProject
# GROUP : X
# NAME 1 : Evan, McMillan, V00203520
# NAME 2 : Rabbi, Quazi, V00778792
# DESC : This program does…[write out a brief summary]
# DATA
# REVISED
########################################################################
*/

#include <stdlib.h> // the header of the general purpose standard library of C programming language
#include <avr/io.h>// the header of i/o port
#include <util/delay_basic.h>
//################## MAIN ROUTINE ##################


void delaynus(int n);
void delaynms(int n);
void timerCount (int tim);
volatile unsigned char led = 0x03

int main(int argc, char *argv[]){
DDRD = 0b11111111; /* Sets all pins on Port D to output */
DDRC = 0xff; //setting the port C direction to output
PORTD = 0b01100000; /* initialize port to high – turn on LEDs */
PORTC = 0x03; // intialize port C

while(1){
	
	PORTC = (1<<led);
	timerCount(1000);//1000ms

	}
return (0); //This line returns a 0 value to the calling program
// generally means no error was returned
}

void delaynus(int n) //delay microsecond
	{
	int k;
	for(k=0;k<n;k++)
	_delay_loop_1(1);
}
void delaynms(int n) //delay millisecond
	{
	int k;
	for(k=0;k<n;k++)
 	delaynus(1000);
}
void timerCount(int tim){
	
	int i = 0;
	
	//Set timer clear on Comparision CTC
	TCCR1B = (1<<WGM12);
	
	//Set Presaler TO 1
	TCCR1B = (1<<CS10);
	
	//Comparison Register to 1000 cycles for 1 ms
	OCR1A = 0x03e8
	
	//Set inital Value of the timer Counter to 0x0000
	TCNT1 = 0x0000;
	
	//Enable the output compare interrut enable
	TIMSK1 = TIMSK1|0x02;
	
	//Clear the timer interrupt flag and begin timer
	TIFR1 = (1<<OCF1A);
	
	//Poll the timer to determine when the timer has reached 1ms
	while(i<count){
		if((TIFR1 & 0x02)==0x02){  // sees if the 0CF1A flag is up 
			
			TIFR1 |=(1<<OCF1A);
			
			i++;
		}
	}
	return;
}
