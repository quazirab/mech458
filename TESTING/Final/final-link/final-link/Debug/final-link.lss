
final-link.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000778  0000080c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000778  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  0080010c  0080010c  00000818  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000818  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000848  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000888  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000931  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000336  00000000  00000000  00001291  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000667  00000000  00000000  000015c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  00001c30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000037e  00000000  00000000  00001ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006e6  00000000  00000000  0000223e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00002924  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__vector_1>
   6:	00 00       	nop
   8:	81 c0       	rjmp	.+258    	; 0x10c <__vector_2>
   a:	00 00       	nop
   c:	a0 c0       	rjmp	.+320    	; 0x14e <__vector_3>
   e:	00 00       	nop
  10:	b3 c0       	rjmp	.+358    	; 0x178 <__vector_4>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	3e c0       	rjmp	.+124    	; 0xd2 <__bad_interrupt>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	b4 c0       	rjmp	.+360    	; 0x1de <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e8 e7       	ldi	r30, 0x78	; 120
  ac:	f7 e0       	ldi	r31, 0x07	; 7
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	ac 30       	cpi	r26, 0x0C	; 12
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	ac e0       	ldi	r26, 0x0C	; 12
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	a6 32       	cpi	r26, 0x26	; 38
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	b5 d1       	rcall	.+874    	; 0x43a <main>
  d0:	51 c3       	rjmp	.+1698   	; 0x774 <_exit>

000000d2 <__bad_interrupt>:
  d2:	6a c0       	rjmp	.+212    	; 0x1a8 <__vector_default>

000000d4 <setupInterrupt>:

/**************************************************************************************/
/*****************************Stepper Motor Clockwise**********************************/
/**************************************************************************************/
void stepperpos(int pos){
	clockwise(50*pos);
  d4:	e9 e6       	ldi	r30, 0x69	; 105
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	82 60       	ori	r24, 0x02	; 2
  dc:	80 83       	st	Z, r24
  de:	80 81       	ld	r24, Z
  e0:	8c 60       	ori	r24, 0x0C	; 12
  e2:	80 83       	st	Z, r24
  e4:	80 81       	ld	r24, Z
  e6:	80 62       	ori	r24, 0x20	; 32
  e8:	80 83       	st	Z, r24
  ea:	80 81       	ld	r24, Z
  ec:	80 68       	ori	r24, 0x80	; 128
  ee:	80 83       	st	Z, r24
  f0:	8d b3       	in	r24, 0x1d	; 29
  f2:	8f 60       	ori	r24, 0x0F	; 15
  f4:	8d bb       	out	0x1d, r24	; 29
  f6:	08 95       	ret

000000f8 <__vector_1>:
  f8:	1f 92       	push	r1
  fa:	0f 92       	push	r0
  fc:	0f b6       	in	r0, 0x3f	; 63
  fe:	0f 92       	push	r0
 100:	11 24       	eor	r1, r1
 102:	0f 90       	pop	r0
 104:	0f be       	out	0x3f, r0	; 63
 106:	0f 90       	pop	r0
 108:	1f 90       	pop	r1
 10a:	18 95       	reti

0000010c <__vector_2>:
 10c:	1f 92       	push	r1
 10e:	0f 92       	push	r0
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	0f 92       	push	r0
 114:	11 24       	eor	r1, r1
 116:	0b b6       	in	r0, 0x3b	; 59
 118:	0f 92       	push	r0
 11a:	8f 93       	push	r24
 11c:	9f 93       	push	r25
 11e:	ef 93       	push	r30
 120:	ff 93       	push	r31
 122:	8f ef       	ldi	r24, 0xFF	; 255
 124:	93 e0       	ldi	r25, 0x03	; 3
 126:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <lowVal2+0x1>
 12a:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <lowVal2>
 12e:	ea e7       	ldi	r30, 0x7A	; 122
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	80 81       	ld	r24, Z
 134:	80 64       	ori	r24, 0x40	; 64
 136:	80 83       	st	Z, r24
 138:	ff 91       	pop	r31
 13a:	ef 91       	pop	r30
 13c:	9f 91       	pop	r25
 13e:	8f 91       	pop	r24
 140:	0f 90       	pop	r0
 142:	0b be       	out	0x3b, r0	; 59
 144:	0f 90       	pop	r0
 146:	0f be       	out	0x3f, r0	; 63
 148:	0f 90       	pop	r0
 14a:	1f 90       	pop	r1
 14c:	18 95       	reti

0000014e <__vector_3>:
 14e:	1f 92       	push	r1
 150:	0f 92       	push	r0
 152:	0f b6       	in	r0, 0x3f	; 63
 154:	0f 92       	push	r0
 156:	11 24       	eor	r1, r1
 158:	8f 93       	push	r24
 15a:	9f 93       	push	r25
 15c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <stepper_flag>
 160:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <stepper_flag+0x1>
 164:	89 2b       	or	r24, r25
 166:	09 f4       	brne	.+2      	; 0x16a <__vector_3+0x1c>
 168:	15 b8       	out	0x05, r1	; 5
 16a:	9f 91       	pop	r25
 16c:	8f 91       	pop	r24
 16e:	0f 90       	pop	r0
 170:	0f be       	out	0x3f, r0	; 63
 172:	0f 90       	pop	r0
 174:	1f 90       	pop	r1
 176:	18 95       	reti

00000178 <__vector_4>:
 178:	1f 92       	push	r1
 17a:	0f 92       	push	r0
 17c:	0f b6       	in	r0, 0x3f	; 63
 17e:	0f 92       	push	r0
 180:	11 24       	eor	r1, r1
 182:	8f 93       	push	r24
 184:	9f 93       	push	r25
 186:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <countStep+0x1>
 18a:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <countStep>
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
 196:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 19a:	9f 91       	pop	r25
 19c:	8f 91       	pop	r24
 19e:	0f 90       	pop	r0
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	0f 90       	pop	r0
 1a4:	1f 90       	pop	r1
 1a6:	18 95       	reti

000001a8 <__vector_default>:
 1a8:	1f 92       	push	r1
 1aa:	0f 92       	push	r0
 1ac:	0f b6       	in	r0, 0x3f	; 63
 1ae:	0f 92       	push	r0
 1b0:	11 24       	eor	r1, r1
 1b2:	0f 90       	pop	r0
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	0f 90       	pop	r0
 1b8:	1f 90       	pop	r1
 1ba:	18 95       	reti

000001bc <setupPWM>:
 1bc:	83 e8       	ldi	r24, 0x83	; 131
 1be:	84 bd       	out	0x24, r24	; 36
 1c0:	82 e0       	ldi	r24, 0x02	; 2
 1c2:	85 bd       	out	0x25, r24	; 37
 1c4:	80 ea       	ldi	r24, 0xA0	; 160
 1c6:	87 bd       	out	0x27, r24	; 39
 1c8:	08 95       	ret

000001ca <setupADC>:
 1ca:	81 e4       	ldi	r24, 0x41	; 65
 1cc:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 1d0:	88 e8       	ldi	r24, 0x88	; 136
 1d2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 1d6:	82 e0       	ldi	r24, 0x02	; 2
 1d8:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
 1dc:	08 95       	ret

000001de <__vector_29>:
 1de:	1f 92       	push	r1
 1e0:	0f 92       	push	r0
 1e2:	0f b6       	in	r0, 0x3f	; 63
 1e4:	0f 92       	push	r0
 1e6:	11 24       	eor	r1, r1
 1e8:	0b b6       	in	r0, 0x3b	; 59
 1ea:	0f 92       	push	r0
 1ec:	2f 93       	push	r18
 1ee:	3f 93       	push	r19
 1f0:	8f 93       	push	r24
 1f2:	9f 93       	push	r25
 1f4:	ef 93       	push	r30
 1f6:	ff 93       	push	r31
 1f8:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 1fc:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 200:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <lowVal1+0x1>
 204:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <lowVal1>
 208:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <lowVal2>
 20c:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <lowVal2+0x1>
 210:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <lowVal1>
 214:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <lowVal1+0x1>
 218:	82 17       	cp	r24, r18
 21a:	93 07       	cpc	r25, r19
 21c:	40 f4       	brcc	.+16     	; 0x22e <__vector_29+0x50>
 21e:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <lowVal1>
 222:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <lowVal1+0x1>
 226:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <lowVal2+0x1>
 22a:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <lowVal2>
 22e:	49 9b       	sbis	0x09, 1	; 9
 230:	06 c0       	rjmp	.+12     	; 0x23e <__vector_29+0x60>
 232:	ea e7       	ldi	r30, 0x7A	; 122
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	80 81       	ld	r24, Z
 238:	80 64       	ori	r24, 0x40	; 64
 23a:	80 83       	st	Z, r24
 23c:	09 c0       	rjmp	.+18     	; 0x250 <__vector_29+0x72>
 23e:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <Status_flag>
 242:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <Status_flag+0x1>
 246:	01 96       	adiw	r24, 0x01	; 1
 248:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <Status_flag+0x1>
 24c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <Status_flag>
 250:	ff 91       	pop	r31
 252:	ef 91       	pop	r30
 254:	9f 91       	pop	r25
 256:	8f 91       	pop	r24
 258:	3f 91       	pop	r19
 25a:	2f 91       	pop	r18
 25c:	0f 90       	pop	r0
 25e:	0b be       	out	0x3b, r0	; 59
 260:	0f 90       	pop	r0
 262:	0f be       	out	0x3f, r0	; 63
 264:	0f 90       	pop	r0
 266:	1f 90       	pop	r1
 268:	18 95       	reti

0000026a <initLink>:
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	ec 01       	movw	r28, r24
 270:	84 e0       	ldi	r24, 0x04	; 4
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	52 d1       	rcall	.+676    	; 0x51a <malloc>
 276:	99 83       	std	Y+1, r25	; 0x01
 278:	88 83       	st	Y, r24
 27a:	fc 01       	movw	r30, r24
 27c:	13 82       	std	Z+3, r1	; 0x03
 27e:	12 82       	std	Z+2, r1	; 0x02
 280:	df 91       	pop	r29
 282:	cf 91       	pop	r28
 284:	08 95       	ret

00000286 <enqueue>:
 286:	db 01       	movw	r26, r22
 288:	ed 91       	ld	r30, X+
 28a:	fc 91       	ld	r31, X
 28c:	30 97       	sbiw	r30, 0x00	; 0
 28e:	61 f0       	breq	.+24     	; 0x2a8 <enqueue+0x22>
 290:	da 01       	movw	r26, r20
 292:	8d 91       	ld	r24, X+
 294:	9c 91       	ld	r25, X
 296:	11 97       	sbiw	r26, 0x01	; 1
 298:	93 83       	std	Z+3, r25	; 0x03
 29a:	82 83       	std	Z+2, r24	; 0x02
 29c:	8d 91       	ld	r24, X+
 29e:	9c 91       	ld	r25, X
 2a0:	fb 01       	movw	r30, r22
 2a2:	91 83       	std	Z+1, r25	; 0x01
 2a4:	80 83       	st	Z, r24
 2a6:	08 95       	ret
 2a8:	da 01       	movw	r26, r20
 2aa:	2d 91       	ld	r18, X+
 2ac:	3c 91       	ld	r19, X
 2ae:	11 97       	sbiw	r26, 0x01	; 1
 2b0:	fc 01       	movw	r30, r24
 2b2:	31 83       	std	Z+1, r19	; 0x01
 2b4:	20 83       	st	Z, r18
 2b6:	8d 91       	ld	r24, X+
 2b8:	9c 91       	ld	r25, X
 2ba:	db 01       	movw	r26, r22
 2bc:	8d 93       	st	X+, r24
 2be:	9c 93       	st	X, r25
 2c0:	08 95       	ret

000002c2 <dequeue>:
 2c2:	fc 01       	movw	r30, r24
 2c4:	80 81       	ld	r24, Z
 2c6:	91 81       	ldd	r25, Z+1	; 0x01
 2c8:	da 01       	movw	r26, r20
 2ca:	8d 93       	st	X+, r24
 2cc:	9c 93       	st	X, r25
 2ce:	a0 81       	ld	r26, Z
 2d0:	b1 81       	ldd	r27, Z+1	; 0x01
 2d2:	10 97       	sbiw	r26, 0x00	; 0
 2d4:	39 f0       	breq	.+14     	; 0x2e4 <dequeue+0x22>
 2d6:	12 96       	adiw	r26, 0x02	; 2
 2d8:	8d 91       	ld	r24, X+
 2da:	9c 91       	ld	r25, X
 2dc:	13 97       	sbiw	r26, 0x03	; 3
 2de:	91 83       	std	Z+1, r25	; 0x01
 2e0:	80 83       	st	Z, r24
 2e2:	08 95       	ret
 2e4:	fb 01       	movw	r30, r22
 2e6:	11 82       	std	Z+1, r1	; 0x01
 2e8:	10 82       	st	Z, r1
 2ea:	08 95       	ret

000002ec <timerCount>:
 2ec:	ac 01       	movw	r20, r24
 2ee:	e1 e8       	ldi	r30, 0x81	; 129
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	80 83       	st	Z, r24
 2f6:	90 81       	ld	r25, Z
 2f8:	98 60       	ori	r25, 0x08	; 8
 2fa:	90 83       	st	Z, r25
 2fc:	88 ee       	ldi	r24, 0xE8	; 232
 2fe:	93 e0       	ldi	r25, 0x03	; 3
 300:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 304:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 308:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 30c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 310:	82 e0       	ldi	r24, 0x02	; 2
 312:	86 bb       	out	0x16, r24	; 22
 314:	20 e0       	ldi	r18, 0x00	; 0
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	05 c0       	rjmp	.+10     	; 0x324 <timerCount+0x38>
 31a:	b1 9b       	sbis	0x16, 1	; 22
 31c:	fe cf       	rjmp	.-4      	; 0x31a <timerCount+0x2e>
 31e:	86 bb       	out	0x16, r24	; 22
 320:	2f 5f       	subi	r18, 0xFF	; 255
 322:	3f 4f       	sbci	r19, 0xFF	; 255
 324:	24 17       	cp	r18, r20
 326:	35 07       	cpc	r19, r21
 328:	1c f4       	brge	.+6      	; 0x330 <timerCount+0x44>
 32a:	b1 9b       	sbis	0x16, 1	; 22
 32c:	f6 cf       	rjmp	.-20     	; 0x31a <timerCount+0x2e>
 32e:	f7 cf       	rjmp	.-18     	; 0x31e <timerCount+0x32>
 330:	08 95       	ret

00000332 <StepperHome>:
 332:	1e c0       	rjmp	.+60     	; 0x370 <StepperHome+0x3e>
 334:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <coilCount>
 338:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <coilCount+0x1>
 33c:	ea 5f       	subi	r30, 0xFA	; 250
 33e:	fe 4f       	sbci	r31, 0xFE	; 254
 340:	80 81       	ld	r24, Z
 342:	82 b9       	out	0x02, r24	; 2
 344:	84 e1       	ldi	r24, 0x14	; 20
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	d1 df       	rcall	.-94     	; 0x2ec <timerCount>
 34a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <coilCount>
 34e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <coilCount+0x1>
 352:	01 96       	adiw	r24, 0x01	; 1
 354:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <coilCount+0x1>
 358:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <coilCount>
 35c:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <coilCount>
 360:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <coilCount+0x1>
 364:	04 97       	sbiw	r24, 0x04	; 4
 366:	24 f0       	brlt	.+8      	; 0x370 <StepperHome+0x3e>
 368:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <coilCount+0x1>
 36c:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <coilCount>
 370:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 374:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
 378:	89 2b       	or	r24, r25
 37a:	e1 f2       	breq	.-72     	; 0x334 <StepperHome+0x2>
 37c:	08 95       	ret

0000037e <clockwise>:
 37e:	ef 92       	push	r14
 380:	ff 92       	push	r15
 382:	0f 93       	push	r16
 384:	1f 93       	push	r17
 386:	cf 93       	push	r28
 388:	df 93       	push	r29
 38a:	18 16       	cp	r1, r24
 38c:	19 06       	cpc	r1, r25
 38e:	0c f0       	brlt	.+2      	; 0x392 <clockwise+0x14>
 390:	4d c0       	rjmp	.+154    	; 0x42c <__FUSE_REGION_LENGTH__+0x2c>
 392:	8c 01       	movw	r16, r24
 394:	c0 e0       	ldi	r28, 0x00	; 0
 396:	d0 e0       	ldi	r29, 0x00	; 0
 398:	0f 2e       	mov	r0, r31
 39a:	f4 e1       	ldi	r31, 0x14	; 20
 39c:	ef 2e       	mov	r14, r31
 39e:	f1 2c       	mov	r15, r1
 3a0:	f0 2d       	mov	r31, r0
 3a2:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <coilCount>
 3a6:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <coilCount+0x1>
 3aa:	01 96       	adiw	r24, 0x01	; 1
 3ac:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <coilCount+0x1>
 3b0:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <coilCount>
 3b4:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <coilCount>
 3b8:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <coilCount+0x1>
 3bc:	04 97       	sbiw	r24, 0x04	; 4
 3be:	24 f0       	brlt	.+8      	; 0x3c8 <clockwise+0x4a>
 3c0:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <coilCount+0x1>
 3c4:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <coilCount>
 3c8:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <coilCount>
 3cc:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <coilCount+0x1>
 3d0:	ea 5f       	subi	r30, 0xFA	; 250
 3d2:	fe 4f       	sbci	r31, 0xFE	; 254
 3d4:	80 81       	ld	r24, Z
 3d6:	82 b9       	out	0x02, r24	; 2
 3d8:	c7 01       	movw	r24, r14
 3da:	88 df       	rcall	.-240    	; 0x2ec <timerCount>
 3dc:	ce 30       	cpi	r28, 0x0E	; 14
 3de:	d1 05       	cpc	r29, r1
 3e0:	1c f4       	brge	.+6      	; 0x3e8 <clockwise+0x6a>
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	e8 1a       	sub	r14, r24
 3e6:	f1 08       	sbc	r15, r1
 3e8:	c8 01       	movw	r24, r16
 3ea:	8c 1b       	sub	r24, r28
 3ec:	9d 0b       	sbc	r25, r29
 3ee:	0e 97       	sbiw	r24, 0x0e	; 14
 3f0:	1c f4       	brge	.+6      	; 0x3f8 <clockwise+0x7a>
 3f2:	8f ef       	ldi	r24, 0xFF	; 255
 3f4:	e8 1a       	sub	r14, r24
 3f6:	f8 0a       	sbc	r15, r24
 3f8:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <countStep>
 3fc:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <countStep+0x1>
 400:	2f 5f       	subi	r18, 0xFF	; 255
 402:	3f 4f       	sbci	r19, 0xFF	; 255
 404:	30 93 13 01 	sts	0x0113, r19	; 0x800113 <countStep+0x1>
 408:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <countStep>
 40c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <countStep>
 410:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <countStep+0x1>
 414:	89 3c       	cpi	r24, 0xC9	; 201
 416:	91 05       	cpc	r25, r1
 418:	24 f0       	brlt	.+8      	; 0x422 <__FUSE_REGION_LENGTH__+0x22>
 41a:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <countStep+0x1>
 41e:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <countStep>
 422:	21 96       	adiw	r28, 0x01	; 1
 424:	c0 17       	cp	r28, r16
 426:	d1 07       	cpc	r29, r17
 428:	09 f0       	breq	.+2      	; 0x42c <__FUSE_REGION_LENGTH__+0x2c>
 42a:	bb cf       	rjmp	.-138    	; 0x3a2 <clockwise+0x24>
 42c:	df 91       	pop	r29
 42e:	cf 91       	pop	r28
 430:	1f 91       	pop	r17
 432:	0f 91       	pop	r16
 434:	ff 90       	pop	r15
 436:	ef 90       	pop	r14
 438:	08 95       	ret

0000043a <main>:
//volatile uint8_t pos = 0;								//value of the stepper position - 1 - white, 2 - black, 3 - steel , 4 - alu


/* main routine */
int main(){	
	DDRB = 0x8F; 	//SET PORT B LOWER 4 BITS TO OUTPUT, WITH PB4,PB5,PB6 TO INPUT, AND PB7 TO OUTPUT
 43a:	8f e8       	ldi	r24, 0x8F	; 143
 43c:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;	//SET ALL OF THE PORT C TO OUTPUT BITS
 43e:	8f ef       	ldi	r24, 0xFF	; 255
 440:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xF0;	//SET ALL OF THE PORT D TO OUTPUT BITS
 442:	80 ef       	ldi	r24, 0xF0	; 240
 444:	8a b9       	out	0x0a, r24	; 10
	DDRF = 0x00;	//SET ALL OF PORT F TO INPUT BITS
 446:	10 ba       	out	0x10, r1	; 16

	rtnLink = NULL;
 448:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <rtnLink+0x1>
 44c:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <rtnLink>
	newLink = NULL;
 450:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <newLink+0x1>
 454:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <newLink>
	cli();				//Disable Global interrupts
 458:	f8 94       	cli
	setupPWM();			//Run the PWM setup Function below
 45a:	b0 de       	rcall	.-672    	; 0x1bc <setupPWM>
	setupADC();			//Run the ADC Setup Function below
 45c:	b6 de       	rcall	.-660    	; 0x1ca <setupADC>
	
	setupInterrupt();	//Sets up all the interrupts
 45e:	3a de       	rcall	.-908    	; 0xd4 <setupInterrupt>
	sei();				//Enable global interrupts
 460:	78 94       	sei
	StepperHome();		//brings the stepper to position
 462:	67 df       	rcall	.-306    	; 0x332 <StepperHome>
	PORTB = dcDrive[1];
 464:	84 e0       	ldi	r24, 0x04	; 4
 466:	85 b9       	out	0x05, r24	; 5
* DESC: initializes the linked queue to 'NULL' status
* INPUT: the head and tail pointers by reference
*/

void setup(link **h,link **t){
	*h = NULL;		/* Point the head to NOTHING (NULL) */
 468:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <head+0x1>
 46c:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <head>
	*t = NULL;		/* Point the tail to NOTHING (NULL) */
 470:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <tail+0x1>
 474:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <tail>
			// 			else if (lowVal2<white_max && lowVal2>whie_min){//WHITE
			// 				newLink->e.itemCode=3;
			// 			}//if
			// 			else newLink->e.itemCode=5;
			
			newLink->e.itemCode=4;
 478:	c4 e0       	ldi	r28, 0x04	; 4
			free(newLink);
			
			dequeue(&head,&tail,&rtnLink);
			PORTC=rtnLink->e.itemCode;
			stepperpos(4);
			stepper_flag=1;
 47a:	01 e0       	ldi	r16, 0x01	; 1
 47c:	10 e0       	ldi	r17, 0x00	; 0
	
	setup(&head,&tail);
	
	while(1){
		
		if(Status_flag>0){
 47e:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <Status_flag>
 482:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <Status_flag+0x1>
 486:	18 16       	cp	r1, r24
 488:	19 06       	cpc	r1, r25
 48a:	cc f7       	brge	.-14     	; 0x47e <main+0x44>
			stepper_flag =0;
 48c:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <stepper_flag+0x1>
 490:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <stepper_flag>
			initLink(&newLink);							//Initialize the newLink
 494:	8f e1       	ldi	r24, 0x1F	; 31
 496:	91 e0       	ldi	r25, 0x01	; 1
 498:	e8 de       	rcall	.-560    	; 0x26a <initLink>
			// 			else if (lowVal2<white_max && lowVal2>whie_min){//WHITE
			// 				newLink->e.itemCode=3;
			// 			}//if
			// 			else newLink->e.itemCode=5;
			
			newLink->e.itemCode=4;
 49a:	e0 91 1f 01 	lds	r30, 0x011F	; 0x80011f <newLink>
 49e:	f0 91 20 01 	lds	r31, 0x0120	; 0x800120 <newLink+0x1>
 4a2:	c0 83       	st	Z, r28
			enqueue(&head,&tail,&newLink);				//enqueues the new cylinder
 4a4:	4f e1       	ldi	r20, 0x1F	; 31
 4a6:	51 e0       	ldi	r21, 0x01	; 1
 4a8:	68 e1       	ldi	r22, 0x18	; 24
 4aa:	71 e0       	ldi	r23, 0x01	; 1
 4ac:	8a e1       	ldi	r24, 0x1A	; 26
 4ae:	91 e0       	ldi	r25, 0x01	; 1
 4b0:	ea de       	rcall	.-556    	; 0x286 <enqueue>
			/*PORTC|=(head->e.itemCode);*/
			free(newLink);
 4b2:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <newLink>
 4b6:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <newLink+0x1>
 4ba:	c4 d0       	rcall	.+392    	; 0x644 <free>
			
			dequeue(&head,&tail,&rtnLink);
 4bc:	46 e1       	ldi	r20, 0x16	; 22
 4be:	51 e0       	ldi	r21, 0x01	; 1
 4c0:	68 e1       	ldi	r22, 0x18	; 24
 4c2:	71 e0       	ldi	r23, 0x01	; 1
 4c4:	8a e1       	ldi	r24, 0x1A	; 26
 4c6:	91 e0       	ldi	r25, 0x01	; 1
 4c8:	fc de       	rcall	.-520    	; 0x2c2 <dequeue>
			PORTC=rtnLink->e.itemCode;
 4ca:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <rtnLink>
 4ce:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <rtnLink+0x1>
 4d2:	80 81       	ld	r24, Z
 4d4:	88 b9       	out	0x08, r24	; 8

/**************************************************************************************/
/*****************************Stepper Motor Clockwise**********************************/
/**************************************************************************************/
void stepperpos(int pos){
	clockwise(50*pos);
 4d6:	88 ec       	ldi	r24, 0xC8	; 200
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	51 df       	rcall	.-350    	; 0x37e <clockwise>
			free(newLink);
			
			dequeue(&head,&tail,&rtnLink);
			PORTC=rtnLink->e.itemCode;
			stepperpos(4);
			stepper_flag=1;
 4dc:	10 93 0b 01 	sts	0x010B, r17	; 0x80010b <stepper_flag+0x1>
 4e0:	00 93 0a 01 	sts	0x010A, r16	; 0x80010a <stepper_flag>
			PORTB = dcDrive[1];
 4e4:	c5 b9       	out	0x05, r28	; 5
			free(rtnLink);
 4e6:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <rtnLink>
 4ea:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <rtnLink+0x1>
 4ee:	aa d0       	rcall	.+340    	; 0x644 <free>
			Status_flag--;
 4f0:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <Status_flag>
 4f4:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <Status_flag+0x1>
 4f8:	01 97       	sbiw	r24, 0x01	; 1
 4fa:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <Status_flag+0x1>
 4fe:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <Status_flag>
			if(Status_flag<0) Status_flag=0;
 502:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <Status_flag>
 506:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <Status_flag+0x1>
 50a:	99 23       	and	r25, r25
 50c:	0c f0       	brlt	.+2      	; 0x510 <main+0xd6>
 50e:	b7 cf       	rjmp	.-146    	; 0x47e <main+0x44>
 510:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <Status_flag+0x1>
 514:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <Status_flag>
 518:	b2 cf       	rjmp	.-156    	; 0x47e <main+0x44>

0000051a <malloc>:
 51a:	cf 93       	push	r28
 51c:	df 93       	push	r29
 51e:	82 30       	cpi	r24, 0x02	; 2
 520:	91 05       	cpc	r25, r1
 522:	10 f4       	brcc	.+4      	; 0x528 <malloc+0xe>
 524:	82 e0       	ldi	r24, 0x02	; 2
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <__flp>
 52c:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <__flp+0x1>
 530:	20 e0       	ldi	r18, 0x00	; 0
 532:	30 e0       	ldi	r19, 0x00	; 0
 534:	c0 e0       	ldi	r28, 0x00	; 0
 536:	d0 e0       	ldi	r29, 0x00	; 0
 538:	30 97       	sbiw	r30, 0x00	; 0
 53a:	11 f1       	breq	.+68     	; 0x580 <malloc+0x66>
 53c:	40 81       	ld	r20, Z
 53e:	51 81       	ldd	r21, Z+1	; 0x01
 540:	48 17       	cp	r20, r24
 542:	59 07       	cpc	r21, r25
 544:	c0 f0       	brcs	.+48     	; 0x576 <malloc+0x5c>
 546:	48 17       	cp	r20, r24
 548:	59 07       	cpc	r21, r25
 54a:	61 f4       	brne	.+24     	; 0x564 <malloc+0x4a>
 54c:	82 81       	ldd	r24, Z+2	; 0x02
 54e:	93 81       	ldd	r25, Z+3	; 0x03
 550:	20 97       	sbiw	r28, 0x00	; 0
 552:	19 f0       	breq	.+6      	; 0x55a <malloc+0x40>
 554:	9b 83       	std	Y+3, r25	; 0x03
 556:	8a 83       	std	Y+2, r24	; 0x02
 558:	2b c0       	rjmp	.+86     	; 0x5b0 <malloc+0x96>
 55a:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__flp+0x1>
 55e:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__flp>
 562:	26 c0       	rjmp	.+76     	; 0x5b0 <malloc+0x96>
 564:	21 15       	cp	r18, r1
 566:	31 05       	cpc	r19, r1
 568:	19 f0       	breq	.+6      	; 0x570 <malloc+0x56>
 56a:	42 17       	cp	r20, r18
 56c:	53 07       	cpc	r21, r19
 56e:	18 f4       	brcc	.+6      	; 0x576 <malloc+0x5c>
 570:	9a 01       	movw	r18, r20
 572:	be 01       	movw	r22, r28
 574:	df 01       	movw	r26, r30
 576:	ef 01       	movw	r28, r30
 578:	02 80       	ldd	r0, Z+2	; 0x02
 57a:	f3 81       	ldd	r31, Z+3	; 0x03
 57c:	e0 2d       	mov	r30, r0
 57e:	dc cf       	rjmp	.-72     	; 0x538 <malloc+0x1e>
 580:	21 15       	cp	r18, r1
 582:	31 05       	cpc	r19, r1
 584:	09 f1       	breq	.+66     	; 0x5c8 <malloc+0xae>
 586:	28 1b       	sub	r18, r24
 588:	39 0b       	sbc	r19, r25
 58a:	24 30       	cpi	r18, 0x04	; 4
 58c:	31 05       	cpc	r19, r1
 58e:	90 f4       	brcc	.+36     	; 0x5b4 <malloc+0x9a>
 590:	12 96       	adiw	r26, 0x02	; 2
 592:	8d 91       	ld	r24, X+
 594:	9c 91       	ld	r25, X
 596:	13 97       	sbiw	r26, 0x03	; 3
 598:	61 15       	cp	r22, r1
 59a:	71 05       	cpc	r23, r1
 59c:	21 f0       	breq	.+8      	; 0x5a6 <malloc+0x8c>
 59e:	fb 01       	movw	r30, r22
 5a0:	93 83       	std	Z+3, r25	; 0x03
 5a2:	82 83       	std	Z+2, r24	; 0x02
 5a4:	04 c0       	rjmp	.+8      	; 0x5ae <malloc+0x94>
 5a6:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__flp+0x1>
 5aa:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__flp>
 5ae:	fd 01       	movw	r30, r26
 5b0:	32 96       	adiw	r30, 0x02	; 2
 5b2:	44 c0       	rjmp	.+136    	; 0x63c <malloc+0x122>
 5b4:	fd 01       	movw	r30, r26
 5b6:	e2 0f       	add	r30, r18
 5b8:	f3 1f       	adc	r31, r19
 5ba:	81 93       	st	Z+, r24
 5bc:	91 93       	st	Z+, r25
 5be:	22 50       	subi	r18, 0x02	; 2
 5c0:	31 09       	sbc	r19, r1
 5c2:	2d 93       	st	X+, r18
 5c4:	3c 93       	st	X, r19
 5c6:	3a c0       	rjmp	.+116    	; 0x63c <malloc+0x122>
 5c8:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__brkval>
 5cc:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__brkval+0x1>
 5d0:	23 2b       	or	r18, r19
 5d2:	41 f4       	brne	.+16     	; 0x5e4 <malloc+0xca>
 5d4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 5d8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 5dc:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__brkval+0x1>
 5e0:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__brkval>
 5e4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 5e8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 5ec:	21 15       	cp	r18, r1
 5ee:	31 05       	cpc	r19, r1
 5f0:	41 f4       	brne	.+16     	; 0x602 <malloc+0xe8>
 5f2:	2d b7       	in	r18, 0x3d	; 61
 5f4:	3e b7       	in	r19, 0x3e	; 62
 5f6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 5fa:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 5fe:	24 1b       	sub	r18, r20
 600:	35 0b       	sbc	r19, r21
 602:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <__brkval>
 606:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <__brkval+0x1>
 60a:	e2 17       	cp	r30, r18
 60c:	f3 07       	cpc	r31, r19
 60e:	a0 f4       	brcc	.+40     	; 0x638 <malloc+0x11e>
 610:	2e 1b       	sub	r18, r30
 612:	3f 0b       	sbc	r19, r31
 614:	28 17       	cp	r18, r24
 616:	39 07       	cpc	r19, r25
 618:	78 f0       	brcs	.+30     	; 0x638 <malloc+0x11e>
 61a:	ac 01       	movw	r20, r24
 61c:	4e 5f       	subi	r20, 0xFE	; 254
 61e:	5f 4f       	sbci	r21, 0xFF	; 255
 620:	24 17       	cp	r18, r20
 622:	35 07       	cpc	r19, r21
 624:	48 f0       	brcs	.+18     	; 0x638 <malloc+0x11e>
 626:	4e 0f       	add	r20, r30
 628:	5f 1f       	adc	r21, r31
 62a:	50 93 23 01 	sts	0x0123, r21	; 0x800123 <__brkval+0x1>
 62e:	40 93 22 01 	sts	0x0122, r20	; 0x800122 <__brkval>
 632:	81 93       	st	Z+, r24
 634:	91 93       	st	Z+, r25
 636:	02 c0       	rjmp	.+4      	; 0x63c <malloc+0x122>
 638:	e0 e0       	ldi	r30, 0x00	; 0
 63a:	f0 e0       	ldi	r31, 0x00	; 0
 63c:	cf 01       	movw	r24, r30
 63e:	df 91       	pop	r29
 640:	cf 91       	pop	r28
 642:	08 95       	ret

00000644 <free>:
 644:	0f 93       	push	r16
 646:	1f 93       	push	r17
 648:	cf 93       	push	r28
 64a:	df 93       	push	r29
 64c:	00 97       	sbiw	r24, 0x00	; 0
 64e:	09 f4       	brne	.+2      	; 0x652 <free+0xe>
 650:	8c c0       	rjmp	.+280    	; 0x76a <free+0x126>
 652:	fc 01       	movw	r30, r24
 654:	32 97       	sbiw	r30, 0x02	; 2
 656:	13 82       	std	Z+3, r1	; 0x03
 658:	12 82       	std	Z+2, r1	; 0x02
 65a:	00 91 24 01 	lds	r16, 0x0124	; 0x800124 <__flp>
 65e:	10 91 25 01 	lds	r17, 0x0125	; 0x800125 <__flp+0x1>
 662:	01 15       	cp	r16, r1
 664:	11 05       	cpc	r17, r1
 666:	81 f4       	brne	.+32     	; 0x688 <free+0x44>
 668:	20 81       	ld	r18, Z
 66a:	31 81       	ldd	r19, Z+1	; 0x01
 66c:	82 0f       	add	r24, r18
 66e:	93 1f       	adc	r25, r19
 670:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__brkval>
 674:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__brkval+0x1>
 678:	28 17       	cp	r18, r24
 67a:	39 07       	cpc	r19, r25
 67c:	79 f5       	brne	.+94     	; 0x6dc <free+0x98>
 67e:	f0 93 23 01 	sts	0x0123, r31	; 0x800123 <__brkval+0x1>
 682:	e0 93 22 01 	sts	0x0122, r30	; 0x800122 <__brkval>
 686:	71 c0       	rjmp	.+226    	; 0x76a <free+0x126>
 688:	d8 01       	movw	r26, r16
 68a:	40 e0       	ldi	r20, 0x00	; 0
 68c:	50 e0       	ldi	r21, 0x00	; 0
 68e:	ae 17       	cp	r26, r30
 690:	bf 07       	cpc	r27, r31
 692:	50 f4       	brcc	.+20     	; 0x6a8 <free+0x64>
 694:	12 96       	adiw	r26, 0x02	; 2
 696:	2d 91       	ld	r18, X+
 698:	3c 91       	ld	r19, X
 69a:	13 97       	sbiw	r26, 0x03	; 3
 69c:	ad 01       	movw	r20, r26
 69e:	21 15       	cp	r18, r1
 6a0:	31 05       	cpc	r19, r1
 6a2:	09 f1       	breq	.+66     	; 0x6e6 <free+0xa2>
 6a4:	d9 01       	movw	r26, r18
 6a6:	f3 cf       	rjmp	.-26     	; 0x68e <free+0x4a>
 6a8:	9d 01       	movw	r18, r26
 6aa:	da 01       	movw	r26, r20
 6ac:	33 83       	std	Z+3, r19	; 0x03
 6ae:	22 83       	std	Z+2, r18	; 0x02
 6b0:	60 81       	ld	r22, Z
 6b2:	71 81       	ldd	r23, Z+1	; 0x01
 6b4:	86 0f       	add	r24, r22
 6b6:	97 1f       	adc	r25, r23
 6b8:	82 17       	cp	r24, r18
 6ba:	93 07       	cpc	r25, r19
 6bc:	69 f4       	brne	.+26     	; 0x6d8 <free+0x94>
 6be:	ec 01       	movw	r28, r24
 6c0:	28 81       	ld	r18, Y
 6c2:	39 81       	ldd	r19, Y+1	; 0x01
 6c4:	26 0f       	add	r18, r22
 6c6:	37 1f       	adc	r19, r23
 6c8:	2e 5f       	subi	r18, 0xFE	; 254
 6ca:	3f 4f       	sbci	r19, 0xFF	; 255
 6cc:	31 83       	std	Z+1, r19	; 0x01
 6ce:	20 83       	st	Z, r18
 6d0:	8a 81       	ldd	r24, Y+2	; 0x02
 6d2:	9b 81       	ldd	r25, Y+3	; 0x03
 6d4:	93 83       	std	Z+3, r25	; 0x03
 6d6:	82 83       	std	Z+2, r24	; 0x02
 6d8:	45 2b       	or	r20, r21
 6da:	29 f4       	brne	.+10     	; 0x6e6 <free+0xa2>
 6dc:	f0 93 25 01 	sts	0x0125, r31	; 0x800125 <__flp+0x1>
 6e0:	e0 93 24 01 	sts	0x0124, r30	; 0x800124 <__flp>
 6e4:	42 c0       	rjmp	.+132    	; 0x76a <free+0x126>
 6e6:	13 96       	adiw	r26, 0x03	; 3
 6e8:	fc 93       	st	X, r31
 6ea:	ee 93       	st	-X, r30
 6ec:	12 97       	sbiw	r26, 0x02	; 2
 6ee:	ed 01       	movw	r28, r26
 6f0:	49 91       	ld	r20, Y+
 6f2:	59 91       	ld	r21, Y+
 6f4:	9e 01       	movw	r18, r28
 6f6:	24 0f       	add	r18, r20
 6f8:	35 1f       	adc	r19, r21
 6fa:	e2 17       	cp	r30, r18
 6fc:	f3 07       	cpc	r31, r19
 6fe:	71 f4       	brne	.+28     	; 0x71c <free+0xd8>
 700:	80 81       	ld	r24, Z
 702:	91 81       	ldd	r25, Z+1	; 0x01
 704:	84 0f       	add	r24, r20
 706:	95 1f       	adc	r25, r21
 708:	02 96       	adiw	r24, 0x02	; 2
 70a:	11 96       	adiw	r26, 0x01	; 1
 70c:	9c 93       	st	X, r25
 70e:	8e 93       	st	-X, r24
 710:	82 81       	ldd	r24, Z+2	; 0x02
 712:	93 81       	ldd	r25, Z+3	; 0x03
 714:	13 96       	adiw	r26, 0x03	; 3
 716:	9c 93       	st	X, r25
 718:	8e 93       	st	-X, r24
 71a:	12 97       	sbiw	r26, 0x02	; 2
 71c:	e0 e0       	ldi	r30, 0x00	; 0
 71e:	f0 e0       	ldi	r31, 0x00	; 0
 720:	d8 01       	movw	r26, r16
 722:	12 96       	adiw	r26, 0x02	; 2
 724:	8d 91       	ld	r24, X+
 726:	9c 91       	ld	r25, X
 728:	13 97       	sbiw	r26, 0x03	; 3
 72a:	00 97       	sbiw	r24, 0x00	; 0
 72c:	19 f0       	breq	.+6      	; 0x734 <free+0xf0>
 72e:	f8 01       	movw	r30, r16
 730:	8c 01       	movw	r16, r24
 732:	f6 cf       	rjmp	.-20     	; 0x720 <free+0xdc>
 734:	8d 91       	ld	r24, X+
 736:	9c 91       	ld	r25, X
 738:	98 01       	movw	r18, r16
 73a:	2e 5f       	subi	r18, 0xFE	; 254
 73c:	3f 4f       	sbci	r19, 0xFF	; 255
 73e:	82 0f       	add	r24, r18
 740:	93 1f       	adc	r25, r19
 742:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__brkval>
 746:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__brkval+0x1>
 74a:	28 17       	cp	r18, r24
 74c:	39 07       	cpc	r19, r25
 74e:	69 f4       	brne	.+26     	; 0x76a <free+0x126>
 750:	30 97       	sbiw	r30, 0x00	; 0
 752:	29 f4       	brne	.+10     	; 0x75e <free+0x11a>
 754:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <__flp+0x1>
 758:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__flp>
 75c:	02 c0       	rjmp	.+4      	; 0x762 <free+0x11e>
 75e:	13 82       	std	Z+3, r1	; 0x03
 760:	12 82       	std	Z+2, r1	; 0x02
 762:	10 93 23 01 	sts	0x0123, r17	; 0x800123 <__brkval+0x1>
 766:	00 93 22 01 	sts	0x0122, r16	; 0x800122 <__brkval>
 76a:	df 91       	pop	r29
 76c:	cf 91       	pop	r28
 76e:	1f 91       	pop	r17
 770:	0f 91       	pop	r16
 772:	08 95       	ret

00000774 <_exit>:
 774:	f8 94       	cli

00000776 <__stop_program>:
 776:	ff cf       	rjmp	.-2      	; 0x776 <__stop_program>
